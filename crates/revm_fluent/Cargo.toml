[package]
authors = ["Dragan Rakita <dragan0rakita@gmail.com>"]
description = "revm - Rust Ethereum Virtual Machine"
edition = "2021"
keywords = ["no_std", "ethereum", "evm", "revm"]
license = "MIT"
name = "revm-fluent"
repository = "https://github.com/bluealloy/revm"
version = "9.0.0"
readme = "../../README.md"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
unreachable_pub = "warn"
unused_must_use = "deny"
rust_2018_idioms = "deny"

[lints.rustdoc]
all = "warn"

[dependencies]
# revm
#revm-interpreter = { path = "../interpreter", default-features = false, optional = true }
#revm-interpreter-fluent = { path = "../interpreter_fluent", default-features = false, optional = true }
#revm-precompile = { path = "../precompile", default-features = false }
revm-interpreter = { package = "revm-interpreter", path = "../interpreter", default-features = false, optional = true }
revm-interpreter-fluent = { package = "revm-interpreter-fluent", path = "../interpreter_fluent", default-features = false, optional = true }
revm-precompile = { package = "revm-precompile", path = "../precompile", default-features = false, optional = true }

#fluentbase-sdk = { workspace = true, default-features = false }
#fluentbase-types = { workspace = true, default-features = false }
#fluentbase-core = { workspace = true, default-features = false }
#fluentbase-runtime = { workspace = true, default-features = false, optional = true }
#fluentbase-genesis = { workspace = true, default-features = false, optional = true }
fluentbase-types = { path = "../../../crates/types", default-features = false }
fluentbase-core = { path = "../../../crates/core", default-features = false }
fluentbase-sdk = { path = "../../../crates/sdk", default-features = false }
fluentbase-runtime = { path = "../../../crates/runtime", default-features = false, optional = true }
fluentbase-genesis = { path = "../../../crates/genesis", default-features = false, optional = true }

rwasm = { git = "https://github.com/fluentlabs-xyz/rwasm", branch = "devel", default-features = false, optional = true }

# misc
auto_impl = { version = "1.2", default-features = false }
cfg-if = "1.0"
dyn-clone = "1.0"
lazy_static = { version = "1.4.0", default-features = false }

# Optional
serde = { version = "1.0", default-features = false, features = [
    "derive",
    "rc",
], optional = true }
serde_json = { version = "1.0", default-features = false, features = [
    "alloc",
], optional = true }

# ethersdb
tokio = { version = "1.37", features = [
    "rt-multi-thread",
    "macros",
], optional = true }
ethers-providers = { version = "2.0", optional = true }
ethers-core = { version = "2.0", optional = true }

# alloydb
# alloy-provider = { git = "https://github.com/alloy-rs/alloy.git", rev = "44b8a6d", optional = true, default-features = false }
# alloy-rpc-types = { git = "https://github.com/alloy-rs/alloy.git", rev = "44b8a6d", optional = true, default-features = false }
# alloy-transport = { git = "https://github.com/alloy-rs/alloy.git", rev = "44b8a6d", optional = true, default-features = false }

[dev-dependencies]
# alloy-sol-types = { path = "../../../../alloy-rs-core/crates/sol-types", default-features = false, features = [
#     "std",
# ] }
alloy-sol-types = { version = "0.7.0", default-features = false, features = [
    "std",
] }

ethers-contract = { version = "2.0.14", default-features = false }
anyhow = { version = "1.0.83", default-features = false }
criterion = { version = "0.5", default-features = false }
indicatif = { version = "0.17", default-features = false }
reqwest = { version = "0.12", default-features = false }
rstest = { version = "0.19.0", default-features = false }

alloy-provider = { git = "https://github.com/alloy-rs/alloy.git", rev = "61140ec", default-features = false, features = [
    "reqwest",
] }
# needed for enabling TLS to use HTTPS connections when testing alloy DB
alloy-transport-http = { git = "https://github.com/alloy-rs/alloy.git", rev = "61140ec", default-features = false }

[features]
default = [
    "std",
    "c-kzg",
    "secp256k1",
    "portable",
    "blst",
]
std = [
    "serde?/std",
    "serde_json?/std",
    "serde_json?/preserve_order",
    "revm-interpreter-fluent?/std",
    "revm-precompile/std",
    "fluentbase-sdk/std",
    "fluentbase-types/std",
    "fluentbase-core/std",
    "dep:fluentbase-runtime",
    "dep:fluentbase-genesis",
    #    "fluentbase-runtime?/std",
    #    "fluentbase-codec/std",
    "fluentbase-genesis/std",
    "rwasm?/std",
]
e2e = [
    "fluentbase-core/e2e",
    "fluentbase-sdk/e2e",
]
hashbrown = ["revm-interpreter-fluent/hashbrown", "revm-precompile/hashbrown"]
serde = ["dep:serde", "revm-interpreter-fluent/serde"]
serde-json = ["serde", "dep:serde_json"]
arbitrary = ["revm-interpreter-fluent/arbitrary"]
asm-keccak = ["revm-interpreter-fluent/asm-keccak", "revm-precompile/asm-keccak"]
portable = ["revm-precompile/portable", "revm-interpreter-fluent/portable"]

test-utils = []

optimism = [
    "revm-interpreter-fluent/optimism",
    "revm-interpreter-fluent/optimism",
    "revm-precompile/optimism",
]
# Optimism default handler enabled Optimism handler register by default in EvmBuilder.
optimism-default-handler = [
    "optimism",
    "revm-precompile/optimism-default-handler",
    "revm-interpreter-fluent/optimism-default-handler",
]
negate-optimism-default-handler = [
    "revm-precompile/negate-optimism-default-handler",
    "revm-interpreter-fluent/negate-optimism-default-handler",
]

ethersdb = [
    "std",
    "tokio",
    "ethers-providers",
    "ethers-core",
] # Negate optimism default handler

#
# alloydb = [
#     "std",
#     "tokio",
#     "alloy-provider",
#     "alloy-rpc-types",
#     "alloy-transport",
# ]

dev = [
    "memory_limit",
    "optional_balance_check",
    "optional_block_gas_limit",
    "optional_eip3607",
    "optional_gas_refund",
    "optional_no_base_fee",
    "optional_beneficiary_reward",
]
memory_limit = ["revm-interpreter-fluent/memory_limit"]
optional_balance_check = ["revm-interpreter-fluent/optional_balance_check"]
optional_block_gas_limit = ["revm-interpreter-fluent/optional_block_gas_limit"]
optional_eip3607 = ["revm-interpreter-fluent/optional_eip3607"]
optional_gas_refund = ["revm-interpreter-fluent/optional_gas_refund"]
optional_no_base_fee = ["revm-interpreter-fluent/optional_no_base_fee"]
optional_beneficiary_reward = ["revm-interpreter-fluent/optional_beneficiary_reward"]

# See comments in `revm-precompile`
secp256k1 = ["revm-precompile/secp256k1"]
c-kzg = ["revm-precompile/c-kzg"]
blst = ["revm-precompile/blst"]

debug_print = [
    "revm-interpreter-fluent/debug_print"
]
rwasm = [
    "e2e",
    "revm-interpreter-fluent/rwasm",
    "revm-precompile/rwasm",
]

[[example]]
name = "fork_ref_transact"
path = "../../examples/fork_ref_transact.rs"
required-features = ["ethersdb"]

[[example]]
name = "generate_block_traces"
path = "../../examples/generate_block_traces.rs"
required-features = ["std", "serde-json", "ethersdb"]

[[example]]
name = "db_by_ref"
path = "../../examples/db_by_ref.rs"
required-features = ["std", "serde-json"]

#[[example]]
#name = "uniswap_v2_usdc_swap"
#path = "../../examples/uniswap_v2_usdc_swap.rs"
#required-features = ["alloydb"]

[[bench]]
name = "bench"
path = "benches/bench.rs"
harness = false
